
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://vddqbinlftnnsgtnbvym.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InZkZHFiaW5sZnRubnNndG5idnltIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDM0NDc2NDIsImV4cCI6MjA1OTAyMzY0Mn0.hyss_UKJtdGhsl5hGmrbsh_nh1Iq_y3lL2d5xWYtKwk";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Create a custom function for incrementing values
// Usage: supabase.rpc('increment', { inc: 1 })
if (!supabase.rpc) {
  (supabase as any).rpc = () => {};
}

(supabase as any).rpc = function(functionName: string, params: any) {
  if (functionName === 'increment') {
    // For local increment simulation - in a real application this would call a Postgres function
    return { inc: params.inc || 1 };
  }
  return {};
};
